{"version":3,"sources":["components/modal/index.js","components/modal/modal.js","components/app/index.js","components/app/app.js","index.js"],"names":["Modal","round","this","props","error","fixed","styles","fix","animation","un_fix","display","className","style","Component","App","handlerClick","item","is_open","checkItem","setState","state","prev_id","id","counter","resetCounter","updateRound","prev_cardId","showColor","window","setTimeout","squares","forEach","element","card_id","prevState","key","hide","bind","squaresItem","map","index","close","backgroundColor","border","open","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba080077.chunk.js","sourcesContent":["import Modal from \"./modal\";\nexport default Modal;","import React, { Component } from \"react\";\nimport \"./modal.css\";\n\nexport default class Modal extends Component {\n\n  render() {\n      let error = this.props.error;\n      let text = \"кликните на еще одну ячейку\";\n      let round;\n      if (error) {\n        round = \" раунд № \" + this.props.round + \" \" + text\n      } else {\n     round = \" раунд № \" + this.props.round; \n      }\n   \n\n    let fixed = this.props.fixed;\n    let styles = {\n      fix: {\n         animation: \"go 0.2s\",\n      },\n\n      un_fix: {\n       animation: \"go 0.2s\",\n        display: \"none\"\n      },\n    };\n  \n    return (\n      <span className=\"modal\" style={fixed ? styles.fix : styles.un_fix}>\n        <p className=\"modal-window\">{round}</p>     \n      </span>\n    );\n  }\n}\n","import App from \"./app\";\nexport default App;","import React, { Component } from \"react\";\nimport \"./app.css\";\nimport Modal from \"../modal\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      squares: [\n        {\n          card_id: 1,\n          className: \"red\",\n          id: 1,\n          is_open: false, // открытый цвет ячейки\n          hide: false,  // удалена ли ячейка\n        },\n        {\n          card_id: 2,\n          className: \"yellow\",\n          id: 2,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 3,\n          className: \"blue\",\n          id: 3,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 4,\n          className: \"gray\",\n          id: 4,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 3,\n          className: \"blue\",\n          id: 5,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 1,\n          className: \"red\",\n          id: 6,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 5,\n          className: \"violet\",\n          id: 7,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 4,\n          className: \"gray\",\n          id: 8,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 6,\n          className: \"black\",\n          id: 9,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 7,\n          className: \"pink\",\n          id: 10,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 8,\n          className: \"green\",\n          id: 11,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 7,\n          className: \"pink\",\n          id: 12,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 5,\n          className: \"violet\",\n          id: 13,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 2,\n          className: \"yellow\",\n          id: 14,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 6,\n          className: \"black\",\n          id: 15,\n          is_open: false,\n          hide: false,\n        },\n        {\n          card_id: 8,\n          className: \"green\",\n          id: 16,\n          is_open: false,\n          hide: false,\n        },\n      ],\n      prev_cardId: null, // индекс по совпадению цветов\n      prev_id: null,\n      counter: 1, // счетчик кликов по ячейкам \n      round: 1,\n      fixed: true, // относится к стилям\n      error: false,\n    };\n    this.handlerClick = this.handlerClick.bind(this);\n  }\n\n  handlerClick = (item) => {\n    item.is_open = true;\n    this.checkItem(item); // проверка item на\n    this.setState({\n      error: true,\n    });\n\n    if (this.state.prev_id !== item.id && this.state.counter >= 2) {\n      this.resetCounter(item);\n      this.updateRound(item);\n      this.setState({\n        error: false,\n        prev_cardId: null,\n        prev_id: null\n      });\n    } \n    if (this.state.counter >= 2) {\n      this.showColor();\n    }\n  };\n\n  updateRound(item) {\n\n    if (this.state.prev_id !== item.id) {\n      this.setState((prevState) => {\n        return { round: prevState.round + 1 };\n      });\n    }\n    window.setTimeout(() => {\n      this.setState({\n        fixed: true,\n      });\n    }, 600);\n  }\n\n  showColor = () => {\n    window.setTimeout(() => {\n      this.state.squares.forEach((element) => {\n        element.is_open = false;\n      });\n    }, 20);\n\n    this.setState({\n      fixed: false,\n    });\n  };\n\n\n  checkItem = (item) => {\n    this.setState({\n      prev_cardId: item.card_id,\n      prev_id: item.id,\n    });\n    this.setState((prevState) => ({\n      counter: prevState.counter + 1,\n    }));\n\n    if (\n      item.card_id === this.state.prev_cardId &&\n      item.id !== this.state.prev_id\n    ) {\n      this.state.squares.forEach((element) => {\n        for (let key in element) {\n          if (key === \"card_id\") {\n            if (element[key] === this.state.prev_cardId) {\n              window.setTimeout(() => {\n                element.hide = true;\n              }, 20);\n            }\n          }\n        }\n      });\n    } else if (this.state.prev_id === item.id) {\n      this.setState({\n        error: true,\n      });\n    }\n  };\n\n  resetCounter = (item) => {\n    this.setState({\n      counter: 1,\n    });\n  };\n\n  render() {\n    const squaresItem = this.state.squares.map((item, index) => {\n      const styles = {\n        close: {\n          backgroundColor: \"white\",\n          border: \"1px solid black\",\n        },\n        open: {\n          backgroundColor: item.className,\n          border: \"1px solid black\",\n        },\n        hide: {\n          border: \"none\",\n        },\n      };\n      return (\n        <div\n          style={\n            item.hide ? styles.hide : item.is_open ? styles.open : styles.close\n          }\n          id={this.props.id}\n          key={index}\n          is_open={this.props.is_open}\n          onClick={() => {\n            this.handlerClick(item);\n          }}\n        ></div>\n      );\n    });\n    return (\n      <div className=\"content-wrap\">\n        <Modal\n          round={this.state.round}\n          fixed={this.state.fixed}\n          error={this.state.error}\n        />\n        <div className=\"content\">{squaresItem}</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render( <App / > , document.getElementById(\"root\"));"],"sourceRoot":""}